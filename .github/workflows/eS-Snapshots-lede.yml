name: Build eS-Snapshots-lede
on:
  workflow_dispatch:
 
jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    name: Build ${{ matrix.model }}-${{ matrix.tag.version }}
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        model:
          #- nanopi-r4s
          #- nanopi-r5s
          - x86_64
        tag:
          - type: dev
            version: snapshots
        target:
          - arch: "x86_64"
            target: "x86"
            kernel: "6.6"

    steps:
    - name: Setup variables
      run: |
        sudo timedatectl set-timezone 'Asia/Shanghai'
        git config --global user.name 'actions'
        git config --global user.email 'action@github.com'
        echo build_dir="/builder" >> "$GITHUB_ENV"
        if [[ ${{ matrix.model }} != "nanopi-r4s" ]]; then
          echo "release_kmod=true" >> "$GITHUB_ENV"
        fi
        if [ "${{ matrix.model }}" = "nanopi-r5s" ]; then
          echo "kmod_repo=kmod-aarch64" >> "$GITHUB_ENV"
        elif [ "${{ matrix.model }}" = "x86_64" ]; then
          echo "kmod_repo=eS-kmod-x86_64" >> "$GITHUB_ENV"
        elif [ "${{ matrix.model }}" = "netgear_r8500" ]; then
          echo "kmod_repo=kmod-bcm53xx" >> "$GITHUB_ENV"
        elif [ "${{ matrix.model }}" = "armv8" ]; then
          echo "kmod_repo=kmod-armsr-armv8" >> "$GITHUB_ENV"
        fi

    - name: Set date
      id: date
      run: |
        #echo "date1=$(TZ=UTC-8 date +'%Y%m%d%H')" >> $GITHUB_ENV
        echo "date1=$(TZ=UTC-8 date +'%m.%d.%Y')" >> $GITHUB_ENV

    - name: Show system
      run: |
        echo -e "\n\e[1;32mCPU:\e[0m"
        echo "$(grep 'model name' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}') ($(grep 'cpu MHz' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}')MHz) x $(grep processor /proc/cpuinfo  | wc -l)"
        echo -e "\n\e[1;32mMemory:\e[0m"
        free -h
        echo -e "\n\e[1;32mStorage:\e[0m"
        df -Th / /mnt
        echo -e "\n\e[1;32mSystem:\e[0m"
        lsb_release -a
        echo -e "\n\e[1;32mKernel:\e[0m"
        uname -a
        echo

    - name: Free disk space
      uses: sbwml/actions@free-disk
      with:
        build-mount-path: /builder

    - name: Build System Setup
      uses: sbwml/actions@openwrt-build-setup

    - name: Compile OpenWrt
      id: compile
      continue-on-error: true
      working-directory: /builder
      run: |
        #export KERNEL_CLANG_LTO=y BUILD_FAST=y ENABLE_BPF=y ENABLE_LTO=y ENABLE_LRNG=y USE_GCC15=y USE_MOLD=y
        #bash <(curl -sS ${{ secrets.script_url_general }}) ${{ matrix.tag.type }} ${{ matrix.model }}
        bash <(curl -sS ${{ secrets.script_url_eS }}) ${{ matrix.tag.type }} ${{ matrix.model }}
        build_date=$(date "+%Y-%m-%d")
        echo "build_date=$build_date" >> $GITHUB_ENV
    
    - name: Extensive logs after a failed compilation
      if: steps.compile.outcome == 'failure'
      working-directory: /builder
      run: |
        cd openwrt
        make V=s IGNORE_ERRORS="n m"

        #cat openwrt/.config
        #echo '================================================================'
        #cd openwrt && make -j1 V=s

    - name: Prepare Firmware Files
      working-directory: /builder
      run: |
        mkdir -p rom info
        #cp -a openwrt/.config  rom/${{matrix.model}}.config
        if [ "${{ matrix.model }}" = "nanopi-r4s" ]; then
          cp -a openwrt/bin/targets/rockchip/*/*.img.gz rom/
          cp -a openwrt/bin/targets/rockchip/*/*-r4s.manifest info/manifest.txt
          cp -a openwrt/bin/targets/rockchip/*/config.buildinfo info/config.buildinfo
          cd rom && sha256sum * > ../info/sha256sums.txt
          #cp -a openwrt/.config  rom/${{matrix.model}}.config
        elif [ "${{ matrix.model }}" = "nanopi-r5s" ]; then
          cp -a openwrt/bin/targets/rockchip/*/*.img.gz rom/
          cp -a openwrt/bin/targets/rockchip/*/*.manifest info/manifest.txt
          cp -a openwrt/bin/targets/rockchip/*/config.buildinfo info/config.buildinfo
          cd rom && sha256sum * > ../info/sha256sums.txt
          #cp -a openwrt/.config  rom/${{matrix.model}}.config
        elif [ "${{ matrix.model }}" = "x86_64" ]; then
          #cp -a openwrt/bin/targets/x86/*/*-ext4-combined-efi.img.gz rom/
          #cp -a openwrt/bin/targets/x86/*/*-squashfs-combined-efi.img.gz rom/
          cp -a openwrt/bin/targets/x86/*/OprX-*.img.gz rom/
          #cp -a openwrt/bin/targets/x86/*/*-generic-rootfs.tar.gz rom/  
          #cp -a openwrt/bin/targets/x86/*/*-x86-64-generic.manifest info/manifest.txt
          #cp -a openwrt/bin/targets/x86/*/config.buildinfo info/config.buildinfo
          cd rom && sha256sum *gz > ../info/sha256sums.txt
        fi
        #cd ..
        #tar zcf rom/eS_sha256info_${{ matrix.model }}.tar.gz info

    #- name: Upload artifacts
     # uses: actions/upload-artifact@v4
      #with:
        ##name: ${{ matrix.model }}-${{ matrix.tag.version }}
        #name: ${{ env.date1 }}_OprX_${{ matrix.target.arch }}-${{ matrix.target.kernel }}
        #path: ${{ env.build_dir }}/rom/*.gz  
        
    - name: Create release
      uses: ncipollo/release-action@v1.14.0
      with:
        #name: OpenWrt-${{ env.latest_release }}
        name: Firmware
        allowUpdates: true
        #tag: ${{ env.latest_release }}
        tag: firmware
        commit: main # 这里必须更改为你仓库的实际分支名称否则固件编译后无法发布到 releases，如：main、master
        replacesArtifacts: true
        token: ${{ secrets.workflow_token }}
        artifacts: |
          ${{ env.build_dir }}/rom/*

    - name: Release kmods
      if: ${{ matrix.model != 'nanopi-r4s' }}
      uses: ncipollo/release-action@v1.14.0
      #uses: sbwml/release-action@main
      with:
        #name: OprX-${{ env.latest_release }}
        #name: ${{ matrix.target.arch }}-${{ matrix.target.kernel }}
        name: Kmod
        allowUpdates: true
        #tag: ${{ env.latest_release }}
        tag: kmod
        commit: main
        replacesArtifacts: true
        token: ${{ secrets.workflow_token }}
        artifacts: |
          ${{ env.build_dir }}/openwrt/*-*.tar.gz
          
    - name: Sync kernel modules
      if: env.release_kmod == 'true'
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.workflow_token }}
        repository: ilxp/oprx-es_core
        event-type: sync
        
    #- name: Release OTA
      #uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      #with:
        #username: openwrt
        #server: ${{ secrets.ftp_address }}
        #password: ${{ secrets.ftp_password }}
        #server-dir: release/${{ matrix.model }}/
        #local-dir: ${{ env.build_dir }}/openwrt/ota/
        #dangerous-clean-slate: true  
   
    #- name: Release OTA/VerMD5
      #uses: ncipollo/release-action@v1.14.0
      #with:
        ##name: OpenWrt-${{ env.latest_release }}
        #name: Firmware
        #allowUpdates: true
        #tag: firmware
        #commit: main  # 这里必须更改为你仓库的实际分支名称否则固件编译后无法发布到 releases，如：main、master
        #replacesArtifacts: true
        #token: ${{ secrets.workflow_token }}
        #artifacts: ${{ env.build_dir }}/openwrt/ota/*

    - name: Sync API
      #if: env.release_kmod == 'true'
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.workflow_token }}
        repository: ilxp/oprx-builder
        event-type: sync 

    #- name: Sync vermd5
      ##if: env.release_kmod == 'true'
      #uses: peter-evans/repository-dispatch@v3
      #with:
        #token: ${{ secrets.workflow_token }}
        #repository: ilxp/oprx-builder
        #event-type: sync 

